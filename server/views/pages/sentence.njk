{% extends "../partials/case.njk" %}
{% set pageTitle = makePageTitle({ pageHeading: [sentenceDetails.sentence.order.description, "Sentence"] }) %}
{% set currentNavSection = 'sentence' %}
{% set currentSectionName = 'Sentence' %}
{% set headerPersonName = sentenceDetails.personSummary.name.forename + ' ' + sentenceDetails.personSummary.name.surname %}
{% set headerCRN = crn %}
{% set headerDob = sentenceDetails.personSummary.dateOfBirth  %}
{% set headerGender = sentenceDetails.personSummary.gender  %}

{% block beforeContent %}
    {{ govukBreadcrumbs({
      items: [
        {
          text: "Cases",
          href: "/case"
        },
        {
          text: headerPersonName,
          href: "/case/" + crn,
          attributes: { "data-ai-id": "breadcrumbPersonNameLink" }
        },
        {
          text: currentSectionName
        }
      ]
    }) }}
{% endblock %}

{% block pageContent %}
    {%- from "moj/components/side-navigation/macro.njk" import mojSideNavigation -%}
    <div class="govuk-grid-row">
      <div class="govuk-grid-column-one-quarter">
      {% set items = [] %}
      {% set eventNumber = sentenceDetails.sentence.offenceDetails.eventNumber %}
      {% if sentenceDetails.sentenceSummaryList.length > 0 %}
          {% for sentence in sentenceDetails.sentenceSummaryList %}
            {% set isActive = sentence.eventNumber === eventNumber %}
            {% set items = items.concat(
                    {
                        "text": sentence.description,
                        href: "/case/" + crn + "/sentence?number=" + sentence.eventNumber,
                        active: isActive
                    }
                )
            %}
          {% endfor %}
      {% else %}
           {% set items = items.concat(
                    {
                        "text": 'No active sentence',
                        href: "",
                        active: true
                    }
                )
            %}
      {% endif %}
      {% set items = items.concat({"text": "Probation history", href: "/case/" + crn + "/sentence/probation-history"}) %}

      {{ mojSideNavigation({
          label: 'Side navigation',
          items: items,
          classes: 'govuk-!-padding-top-0'
        }) }}
  </div>
      <div class="govuk-grid-column-three-quarters">
          {% set sentence = sentenceDetails.sentence %}
          {% if sentence %}
            <h2 class="govuk-heading-m govuk-!-margin-bottom-2"  data-qa="pageHeading">
                {% if sentence.order.description %}
                    {{ sentence.order.description }}
                {% else %}
                    Pre-Sentence
                {% endif %}
            </h2>

            {% set hasAdditionalOffences = sentence.offenceDetails.additionalOffences and sentence.offenceDetails.additionalOffences.length > 0 %}
              {% set additionalOffences %}
                  {% if hasAdditionalOffences %}
                      <ol class="govuk-list{% if sentence.offenceDetails.additionalOffences > 1 %} govuk-list--number{% endif %}">
                          {% for additionalOffence in sentence.offenceDetails.additionalOffences %}
                              <li>{{ additionalOffence.description }} ({{ additionalOffence.count }} count)</li>
                          {% endfor %}
                      </ol>

                      <a href="/case/{{ crn }}/sentence/offences/{{ sentence.offenceDetails.eventNumber }}">View additional offence details</a>
                  {% endif %}
            {% endset %}

            {% set hasCourtDocuments = sentence.courtDocuments and sentence.courtDocuments.length > 0 %}
              {% set courtDocuments %}
                  <ul class="govuk-list govuk-!-margin-top-0">
                      {% for doc in sentence.courtDocuments %}
                          <li>
                              <a href="personal-details/documents/{{ doc.id }}/download" download="{{ doc.documentName }}">{{ doc.documentName }}</a><br>
                              <span class="govuk-!-font-size-16">
                        {% if doc.lastSaved %}
                            Last updated {{ doc.lastSaved | dateWithYearShortMonth }}
                        {% else %}
                            Unavailable
                        {% endif %}
                    </span>
                          </li>
                      {% endfor %}
                  </ul>
            {% endset %}

            {% set hasAdditionalSentences = sentence.conviction.additionalSentences and sentence.conviction.additionalSentences.length > 0 %}
              {% set additionalSentences %}
                  {% for additionalSentence in sentence.conviction.additionalSentences %}
                      {% set detailsHtml %}
                          {{ govukSummaryList({
                              rows: [
                                  {
                                      key: { text: 'Sentence' },
                                      value: { text: additionalSentence.description }
                                  },
                                  {
                                      key: { text: 'Value' },
                                      value: { text: additionalSentence.value }
                                  } if additionalSentence.value,
                                  {
                                      key: { text: 'Length' },
                                      value: { text: additionalSentence.length }
                                  } if additionalSentence.length,
                                  {
                                      key: { text: 'Notes' },
                                      value: { html: additionalSentence.notes | nl2br if additionalSentence.notes else 'No notes' }
                                  }
                              ]
                          }) }}
                      {% endset %}
                      {{ govukDetails({
                          classes: 'govuk-!-margin-bottom-1',
                          summaryText: additionalSentence.description,
                          html: detailsHtml
                      }) }}
                  {% endfor %}
            {% endset %}

            {% set hasLicenceConditions = sentence.licenceConditions and sentence.licenceConditions.length > 0 %}
              {% set notes = '' %}
              {% set licenceConditions %}
                  {% for licenceCondition in sentence.licenceConditions %}
                      {% set notes = '' %}
                      {% for lcNote in licenceCondition.licenceConditionNotes %}
                          {% set notes = notes.concat(appNote(lcNote, "/case/" + crn + "/sentence/licence-condition/" + licenceCondition.id + "/note/" + lcNote.id)) %}
                      {% endfor %}
                      {% set licenceHtml %}
                          {{ govukSummaryList({
                              rows: [
                                  {
                                      key: { text: 'Subtype' },
                                      value: { text: licenceCondition.subTypeDescription }
                                  } if licenceCondition.subTypeDescription,
                                  {
                                      key: { text: 'Imposed (Release) date' },
                                      value: { text: licenceCondition.imposedReleasedDate | dateWithYear }
                                  },
                                  {
                                      key: { text: 'Actual start date' },
                                      value: { text: licenceCondition.actualStartDate | dateWithYear }
                                  } if licenceCondition.actualStartDate,
                                  {
                                      key: { text: 'Notes' },
                                      value: { html: notes }
                                  }
                              ]
                          }) }}
                      {% endset %}
                      {{ govukDetails({
                          classes: 'govuk-!-margin-bottom-1',
                          summaryText: licenceCondition.mainDescription,
                          html: licenceHtml
                      }) }}
                  {% endfor %}
            {% endset %}


            {% set hasRequirements = sentence.requirements and sentence.requirements.length > 0 %}
              {% set requirements %}
                  {% for requirement in sentence.requirements %}
                  {% set reqSummary = requirement.description %}
                   {% set reqNotes = '' %}
                      {% for reqNote in requirement.requirementNotes %}
                          {% set reqNotes = reqNotes.concat(appNote(reqNote, "/case/" + crn + "/sentence/requirement/" + requirement.id + "/note/" + reqNote.id)) %}
                      {% endfor %}
                      {% set completedRar = requirement.rar.completed + requirement.rar.nsiCompleted  %}
                      {% set requirementHtml %}
                          {{ govukSummaryList({
                              rows: [
                                  {
                                      key: { text: 'Length' },
                                      value: { text: requirement.length + ' ' + requirement.lengthUnitValue | lower }
                                  } if requirement.length and requirement.code != 'F',
                                  {
                                      key: { text: 'Length of RAR' },
                                      value: { text: requirement.rar.totalDays + ' day' if requirement.rar.totalDays == 1 else  requirement.length + ' days' }
                                  } if requirement.length and requirement.code == 'F',
                                  {
                                      key: { text: 'Completed RAR' },
                                      value: { text: requirement.rar.completed + ' day' if completedRar == 1 else completedRar + ' days' }
                                  } if requirement.code == 'F',
                                  {
                                      key: { text: "Expected start date" },
                                      value: { text: requirement.expectedStartDate | dateWithYear }
                                  } if requirement.expectedStartDate and not requirement.actualStartDate,
                                  {
                                      key: { text: "Start date" },
                                      value: { text: requirement.actualStartDate | dateWithYear }
                                  } if requirement.actualStartDate,
                                  {
                                      key: { text: "Expected end date" },
                                      value: { text: requirement.expectedEndDate | dateWithYear }
                                  } if requirement.expectedEndDate and not requirement.actualEndDate,
                                  {
                                      key: { text: "End date" },
                                      value: { text: requirement.actualEndDate | dateWithYear }
                                  } if requirement.actualEndDate,
                                  {
                                      key: { text: "Result" },
                                      value: { text: requirement.terminationReason }
                                  } if requirement.terminationReason,
                                  {
                                      key: { text: 'Notes' },
                                      value: { html: reqNotes }
                                  }
                              ]
                          }) }}
                      {% endset %}
                      {{ govukDetails({
                          classes: 'govuk-!-margin-bottom-1',
                          summaryText: reqSummary,
                          html: requirementHtml
                      }) }}
                  {% endfor %}
            {% endset %}

            {% set offence %}
                  {{ govukSummaryList({
                      rows: [
                          {
                              key: { html: '<span data-qa="mainOffenceLabel">Main offence</span>' },
                              value: { html: '<span data-qa="mainOffenceValue">' + sentence.offenceDetails.offence.description + ' (' + sentence.offenceDetails.offence.count + ' count)' + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="dateOfOffenceLabel">Offence date</span>' },
                              value: { html: '<span data-qa="dateOfOffenceValue">' + sentence.offenceDetails.dateOfOffence | dateWithYear + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="offenceNotesLabel">Notes</span>' },
                              value: { html: '<span data-qa="offenceNotesValue">' + sentence.offenceDetails.notes | nl2br if sentence.offenceDetails.notes else 'No notes' + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="additionalOffencesLabel">Additional offences</span>' },
                              value: { html: '<span data-qa="additionalOffencesValue">' + additionalOffences if hasAdditionalOffences else 'No additional offences' + '</span>' }
                          }
                      ]
                  }) }}
            {% endset %}

            {% set conviction %}
                  {{ govukSummaryList({
                      rows: [
                          {
                              key: { html: '<span data-qa="sentencingCourtLabel">Sentencing court</span>' },
                              value: { html: '<span data-qa="sentencingCourtValue">' + sentence.conviction.sentencingCourt | nl2br if sentence.conviction.sentencingCourt else 'No court details' + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="responsibleCourtLabel">Responsible court</span>' },
                              value: { html: '<span data-qa="responsibleCourtValue">' + sentence.conviction.responsibleCourt | nl2br if sentence.conviction.responsibleCourt else 'No court details' + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="convictionDateLabel">Conviction date</span>' },
                              value: { html: '<span data-qa="convictionDateValue">' + sentence.conviction.convictionDate | dateWithYear | nl2br if sentence.conviction.convictionDate  else 'No conviction date' + '</span>'}
                          },
                          {
                              key: { html: '<span data-qa="additionalSentencesLabel">Additional sentences</span>' },
                              value: { html: '<span data-qa="additionalSentencesValue">' + additionalSentences if hasAdditionalSentences else 'No additional sentences' + '</span>'}
                          }
                      ]
                  }) }}
            {% endset %}

            {% set sentence %}
                  {{ govukSummaryList({
                      rows: [
                          {
                              key: { html: '<span data-qa="orderDescriptionLabel">Order</span>' },
                              value: { html: '<span data-qa="orderDescriptionValue">' + (sentence.order.description | nl2br if sentence.order.description else 'No order details') + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="orderEventNumberLabel">NDelius event number</span>' },
                              value: { html: '<span data-qa="orderEventNumberValue">' + (sentence.offenceDetails.eventNumber if sentence.offenceDetails.eventNumber else 'No event number') + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="orderStartDateLabel">Sentence start date</span>' },
                              value: { html: '<span data-qa="orderStartDateValue">' + (sentence.order.startDate | dateWithYear | nl2br if sentence.order.startDate else 'No start date details') + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="orderReleaseDateLabel">Date released on licence</span>' },
                              value: { html: '<span data-qa="orderReleaseDateValue">' + (sentence.order.releaseDate | dateWithYear | nl2br if sentence.order.releaseDate else 'No release date details') + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="orderEndDateLabel">Expected sentence end date</span>' },
                              value: { html: '<span data-qa="orderEndDateValue">' + (sentence.order.endDate | dateWithYear | nl2br if sentence.order.endDate else 'No end date details') + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="orderTimeElapsedLabel">Time elapsed</span>' },
                              value: { html: '<span data-qa="orderTimeElapsedValue">' + (sentence.order.startDate | monthsOrDaysElapsed + ' elapsed (of ' + sentence.order.length + ' months)' | nl2br if sentence.order.startDate else 'No details')  + '</span>' }
                          },
                          {
                              key: { html: '<span data-qa="licenceConditionsLabel">Licence conditions</span>' },
                              value: { html: '<span data-qa="licenceConditionsValue">' + licenceConditions + '</span>'}
                          } if hasLicenceConditions,
                          {
                              key: { html: '<span data-qa="requirementsLabel">Requirements</span>' },
                              value: { html: '<span data-qa="requirementsValue">' + requirements + '</span>'}
                          } if hasRequirements,
                          {
                              key: { html: '<span data-qa="unpaidWorkProgressLabel">Unpaid work progress</span>' },
                              value: { html: '<span data-qa="unpaidWorkProgress">' + sentence.unpaidWorkProgress + '</span>' }
                          } if sentence.unpaidWorkProgress,
                          {
                              key: { html: '<span data-qa="courtDocumentsLabel">Court documents</span>' },
                              value: { html: '<span data-qa="courtDocumentsValue">' + (courtDocuments if hasCourtDocuments else 'No court documents') + '</span>' }
                          }
                      ]
                  }) }}
            {% endset %}

            {{ appSummaryCard({
                  attributes: {'data-qa': 'offenceCard'},
                  titleText: 'Offence',
                  classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
                  html: offence
            }) }}

            {{ appSummaryCard({
                  attributes: {'data-qa': 'convictionCard'},
                  titleText: 'Conviction',
                  classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
                  html: conviction
            }) }}

            {{ appSummaryCard({
                  attributes: {'data-qa': 'sentenceCard'},
                  titleText: 'Sentence',
                  classes: 'govuk-!-margin-bottom-6 app-summary-card--large-title',
                  html: sentence
            }) }}
          </div>
          {% else %}
          <div data-qa="no-active-sentence">
          <h3 class="govuk-heading-m govuk-!-margin-top-0">No active sentence</h3>
          <p>This person does not have any active sentences.</p>
          </div>
          {% endif %}
    </div>
{% endblock %}



