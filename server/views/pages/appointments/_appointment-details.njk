{% set notes = '' %}
{% set hasNote = appointment.appointmentNote and appointment.hasOutcome == false %}
{% set hasNotes = appointment.appointmentNotes.length > 0 and appointment.hasOutcome == false %}
{% if hasNotes %}
  {% for appointmentNote in appointment.appointmentNotes %}
    {% if appointmentNote.note %}
      {% set notes = notes.concat(appNote(appointmentNote, '/case/' + crn + '/appointments/appointment/' + appointment.id + '/manage/note/' + appointmentNote.id + '?back=' + url)) %}
    {% endif %}
  {% endfor %}
{% endif %}
{{ govukSummaryList({
  classes: 'govuk-!-margin-bottom-0' if noMargin else 'govuk-!-margin-bottom-9',
  rows: [
    {
      key: { html: '<span data-qa="appointmentRescheduleLabel">Reschedule</span>' },
      value: { html: '<span data-qa="appointmentRescheduleValue">Requested by ' + appointment.rescheduledBy | fullName + '</span>'}
    } if appointment.rescheduledBy,
    {
      key: { html: '<span data-qa="rearrangingLabel">Reason for rearranging</span>' },
      value: { html: '<span data-qa="rearrangingValue">' + appointment.rearrangeOrCancelReason + '</span>' },
      actions: {
        items: [
          {
            classes: "govuk-link--no-visited-state",
            attributes: { "target": "_blank", "aria-label":"Change '" + appointment.type | lower + " appointment on NDelius" },
            href: deliusDeepLinkUrl('UpdateContact', crn, appointment.id),
            text:'Change',
            visuallyHiddenText: '(opens in new tab)'
          }
        ]
      }
    } if appointment.rearrangeOrCancelReason,
    {
      key: { html: '<span data-qa="typeLabel">Type of appointment</span>' },
      value: { html: '<span data-qa="typeValue">' + appointment.type + '</span>' }
    },
    {
      key: { html: '<span data-qa="descriptionLabel">Description</span>' },
      value: { html: '<span data-qa="descriptionValue">' + (appointment.description | nl2br | safe) + '</span>' }
    } if appointment.description,
    {
      key: { html: '<span data-qa="locationLabel">Location</span>' },
      value: { html: '<span data-qa="locationValue">' + addressToList(appointment.location).join('<br>') | safe + '</span>' }
    } if appointment.location,
    {
      key: { html: '<span data-qa="dateLabel">Date</span>' },
      value: { html: '<span data-qa="dateValue">' + appointment.startDateTime | dateWithDayAndWithoutYear + '</span>'}
    },
    {
      key: { html:  '<span data-qa="timeLabel">Time</span>' },
      value: { html: '<span data-qa="timeValue">' + timeFromTo(appointment.startDateTime, appointment.endDateTime) + '</span>'}
    },
    {
      key: { html: '<span data-qa="repeatingLabel">Repeating appointment</span>' },
      value: { html: '<span data-qa="repeatingValue">' + appointment.repeating  | toYesNo + '</span>'}
    } if appointment.repeating,
    {
      key: { html: '<span data-qa="rarLabel">RAR toolkit</span>' },
      value: { html: '<span data-qa="rarValue">' + appointment.rarCategory + '</span>'}
    } if appointment.rarCategory,
    {
      key: { html: '<span data-qa="rarActivityLabel">RAR activity</span>' },
      value: { html: '<span data-qa="rarActivityValue">' + appointment.countsTowardsRAR | toYesNo + '</span>' }
    } if not appointment.hasOutcome,
    {
      key: { html: '<span data-qa="noteAddedByLabel">Note added by</span>' },
      value: { html: '<span data-qa="noteAddedByValue">' + appointment.appointmentNote.createdBy + '</span>' }
    } if appointment.appointmentNote.createdBy and hasNote,
    {
      key: { html: '<span data-qa="dateAddedLabel">Date added</span>' },
      value: { html: '<span data-qa="dateAddedValue">' + appointment.appointmentNote.createdByDate | dateWithYear + '</span>' }
    } if appointment.appointmentNote.createdByDate and hasNote,
    {
      key: { html: '<span data-qa="notesLabel">Appointment notes</span>' },
      value: { html: '<span data-qa="notesValue">' + notes + '</span>' }
    } if hasNotes and not hasNote,
    {
      key: { html: '<span data-qa="noteLabel">Note</span>' },
      value: { html: '<span class="govuk-body line-break" data-qa="noteValue">' + appointment.appointmentNote.note + '</span>' }
    } if hasNote,
    {
      key: { html: '<span data-qa="sensitiveLabel">Sensitive</span>' },
      value: { html: '<span data-qa="sensitiveLabel">' + appointment.isSensitive | toYesNo + '</span>' }
    } if not appointment.hasOutcome
  ]
  }) }}