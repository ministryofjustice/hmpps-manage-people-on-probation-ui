{% set changePath = "/case/" + crn + "/arrange-appointment/"  + id %}
{% set sentenceHtml %}
{% if appointment.appointmentFor.sentence %}
    <span data-qa="appointmentSentence">{{ appointment.appointmentFor.sentence }}</span>
{% endif %}
{% if appointment.appointmentFor.requirement %}
    <br>
    <span data-qa="appointmentRequirement">{{ appointment.appointmentFor.requirement }}</span>
{% endif %}
{% if appointment.appointmentFor.licenceCondition %}
    <br>
    <span data-qa="appointmentLicenceCondition">{{ appointment.appointmentFor.licenceCondition }}</span>
{% endif %}
{% if appointment.appointmentFor.nsi %}
    <br>
    <span data-qa="appointmentNsi">{{ appointment.appointmentFor.nsi }}</span>
{% endif %}
{% if appointment.appointmentFor.forename %}
    <span data-qa="appointmentForename">{{ appointment.appointmentFor.forename }}</span>
{% endif %}
{% endset %}
{% set attendingHtml %}
{% if appointment.meta.userIsAttending %}
    {{ appointment.attending.name }}
{% else %}
    {{ appointment.attending.name + " (" + appointment.attending.team + ", " +  appointment.attending.region + ")"}}
{% endif %}
{% endset %}
{% set locationHtml = '' %}
{% if appointment.location.address %}
    {% set locationHtml = [
        appointment.location.description + "<br>",
        addressToList(appointment.location.address).join('<br>')
    ] | join | safe %}
{% endif %}
{% if appointment.location == 'NO_LOCATION_REQUIRED' %}
    {% set locationHtml = 'Not required' %}
{% endif %}
<form method="post" autocomplete="off" action="{{ paths.current }}">
    {% set showAction = true %}
    {% set appointmentDates = [] %}
    {% if appointment.date %}
        {% set appointmentDates = (appointmentDates.push(appointment.date), appointmentDates) %}
    {% endif %}
    {% for appointmentDate in appointment.repeatingDates %}
        {% set appointmentDates = (appointmentDates.push(appointmentDate), appointmentDates) %}
    {% endfor %}
    {% set appointmentDatesHtml %}
    <ul class="govuk-list">
        {% for appointmentDate in appointmentDates %}
            <li>{{ appointmentDate | dateWithYear }}
          from
          {{appointment.start}}
          to
          {{ appointment.end }}</li>
        {% endfor %}
    </ul>
    {% endset %}
    {{ govukSummaryList({
        classes: 'govuk-!-margin-bottom-9',
        rows: [
            { key: { text: "Appointment for" },
            value: { html: 'Not entered' if (not appointment.appointmentFor.sentence and not appointment.appointmentFor.forename) else sentenceHtml | safe  },
            actions: {
            items: [ { 
            href: changePath + "/sentence?change=" + url, 
            text: "Choose for" if (not appointment.appointmentFor.sentence and not appointment.appointmentFor.forename) else "Change", 
            visuallyHiddenText: "sentence"
            } 
            ] 
            } if showAction }, 
            {
            key: { text: "Appointment type" },
            value: { text: 'Not entered' if not appointment.type else appointment.type.description | toSentenceCase(['(NS)']) },
            actions: {
                items: [
                {
                    href: changePath + "/type?change=" + url,
                    text: "Choose type" if not appointment.type else "Change",
                    visuallyHiddenText: "type of appointment"
                }
                ]
            } if showAction and (appointment.appointmentFor.sentence or appointment.appointmentFor.forename)
            },
            {
                key: { text: "VISOR report"},
                value: { text: appointment.visorReport },
                actions: {
                    items: [ 
                        {
                            href: changePath + "/type?change=" + url,
                            text: "Change",
                            visuallyHiddenText: "type of appointment"
                        } 
                    ] 
                } if showAction
            } if appointment.meta.isVisor,
    { key: { text: "Attending" },
    value: { html: 'Not entered' if (not appointment.attending.name or not appointment.attending.team or not appointment.attending.region) else attendingHtml | safe },
    actions: {
    items: [ { 
    href: changePath + "/attendance?change=" + url + "&back=attendance", 
    text: "Choose attending" if (not appointment.attending.name or not appointment.attending.team or not appointment.attending.region) else "Change", 
    visuallyHiddenText: "attendance"
     } 
     ] 
     } if showAction and (appointment.appointmentFor.sentence or appointment.appointmentFor.forename) and appointment.type },
     { key: { text: "VISOR report"},
      value: { text: appointment.visorReport },
      actions: {
      items: [ {
     href: changePath + "/type?change=" + url,
     text: "Change",
     visuallyHiddenText: "type of appointment"
     }
     ]
     } if showAction
     } if appointment.meta.isVisor,
     { key: { text: "Location" }, 
     value: { text: 'Not entered' if not locationHtml else locationHtml | safe }, 
     actions: { items: [ { href: changePath + "/location?change=" + url, 
     text: "Choose location" if not locationHtml else  "Change",
      visuallyHiddenText: "location"
      }
      ]
      } if showAction  and (appointment.appointmentFor.sentence or appointment.appointmentFor.forename) and appointment.type and appointment.attending.name },
      { key: { text: "Date and time" },
      value: { html: 'Not entered' if appointmentDates.length == 0 else appointmentDatesHtml }, 
      actions: { items: [ { href: changePath + "/date-time?change=" + url,
      text: "Choose date and time" if appointmentDates.length == 0 else "Change",
      visuallyHiddenText: "date and time of the appointment" } ] } },
         { 
            key: { html: '<span data-qa="repeatingAppointmentLabel">Repeating appointment</span>' },
      value: { html: '<span data-qa="repeatingAppointmentValue">' + ('Yes' if appointment.repeating === 'Yes' else 'No') + '</span>' },
      actions: { items: [ { href: changePath + "/repeating?change=" + url, text: "Change", visuallyHiddenText: "repeating appointment" } ] } } if flags.enableRepeatAppointments == true,
       { key: { text: "Supporting information" },
    value: { html: "Not entered" if not appointment.notes else appointment.notes | nl2br },
    actions: {
    items: [ { 
    href: changePath + "/add-notes?change=" + url, 
    text: "Add notes" if not appointment.notes else "Change", 
    visuallyHiddenText: "notes"
     } 
     ] 
     } if showAction }, 
      { key: { text: "Sensitivity" },
    value: { text: "Not entered" if not appointment.sensitivity else appointment.sensitivity | safe },
    actions: {
    items: [ { 
    href: changePath + "/add-notes?change=" + url, 
    text: "Choose sensitivity" if not appointment.sensitivity else "Change", 
    visuallyHiddenText: "sensitivity"
     } 
     ] 
     } if showAction }
] }) }}
    {{ govukButton({
      html: buttonText,
      attributes: {
        'data-qa': 'submit-btn'
      }
    }) }}
    <input type="hidden" name="_csrf" value="{{ csrfToken }}">
</form>